# You may modify this file freely. It is not overwritten by oasis
# setup once it exists.

# Define hierarchy (OASIS_SUBDIRS)
include _oasis_hier.om

# subdirectories
.SUBDIRS: $(OASIS_SUBDIRS)

# local phonies
.PHONY: build-here install-here pre-install-here clean-here distclean-here

# At this point you may set any of the EXTRA variables defined in the .om files:
#
# EXTRA_OCAMLPACKS[] =
#    foo
#    bar
# EXTRA_OCAMLFLAGS = -syntax camlp4o
#
# In order to restrict such a variable to only a single library or executable
# append its name separated with an underscore, e.g.
#
# EXTRA_OCAMLPACKS_mylibrary[] =
#    baz
#
# Note that there is a separate mechanism for applying flags to individual
# modules (OASIS_modify_<something>), see below.

# Include definitions generated by OASIS

include _oasis_build.om
#include _oasis_install.om

# These calls define the rules needed for "build", "install", etc.

DefineBuildRules()
#DefineInstallRules()

# You may define additional build rules here.

# Modify flags for a module:
# OASIS_modify_OCAMLFINDFLAGS(module, -syntax camlp4o)
# OASIS_modify_OCAMLFLAGS(module, -warn-error +a)
# OASIS_modify_OCAMLOPTFLAGS(module, -p)
# OASIS_modify_OCAMLCFLAGS(module, -vmthread)
# OASIS_modify_OCAMLLEXFLAGS(module, -ml)
# OASIS_modify_OCAMLYACCFLAGS(module, -q)
# also for C variables

# entry points

build-here: $(BUILD_TARGETS)
#install-here: $(INSTALL_TARGETS)
#pre-install-here:

clean-here:
    rm -f $(OASIS_clean_list)

distclean-here:
    rm -f $(OASIS_distclean_list)

# Because these targets are global phonies they cover the whole
# directory hierarchy:

build: build-here
#install: install-here
clean: clean-here
distclean: distclean-here
