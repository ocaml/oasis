OASISFormat:    0.4
Name:           oasis
Version:        0.4.12
OCamlVersion:   >= 3.12.1
FindlibVersion: >= 1.3.1
LicenseFile:    COPYING.txt
License:        LGPL-2.1 with OCaml linking exception
BuildType:      ocamlbuild (0.4)
Authors:        Sylvain Le Gall
Maintainers:    Sylvain Le Gall <sylvain@le-gall.net>
Copyrights:     (C) 2011-2016 Sylvain Le Gall
                (C) 2008-2010 OCamlCore SARL
Homepage:       https://github.com/ocaml/oasis
Plugins:        DevFiles (0.4), StdFiles (0.4), META (0.4)
FilesAB:        src/oasis/OASISConf.ml.ab
BuildTools:     ocamlbuild, make
AlphaFeatures:  source_patterns, stdfiles_markdown
BugReports:	https://github.com/ocaml/oasis/issues
ImplementationPatterns+:
  ${module}.mlify

Synopsis: Tooling for building OCaml libraries and applications
Description:
  OASIS generates a full configure, build and install system for your
  application. It starts with a simple `_oasis` file at the toplevel of your
  project and creates everything required.
  .
  OASIS leverages existing OCaml tooling to perform most of it's work. In fact,
  it might be more appropriate to think of it as simply the glue that binds
  these other subsystems together and coordinates the work that they do. It
  should support the following tools:
  .
   * OCamlbuild
   * OMake
   * OCamlMakefile (todo),
   * ocaml-autoconf (todo)
  .
  It also features a do-it-yourself command line invocation and an internal
  configure/install scheme. Libraries are managed through findlib. It has been
  tested on GNU Linux and Windows.
  .
  It also allows to have standard entry points and description. It helps to
  integrates your libraries and software with third parties tools like OPAM.

Flag libraries
  Description: Install OASIS and base libraries, for plugins development

Flag devel
  Description: Build OASIS tools for development
  Default: false

Flag quickstart_tests
  Description: Build test-quickstart
  Default: true

Flag omake_tests
  Description: Build test-omake
  Default: false

Flag devel_tests
  Description: Build test-devel
  Default: false

Library oasis
  Path: src/oasis
  Modules: FormatExt,
           PropList,
           OASISUtils,
           OASISUnixPath,
           OASISFileSystem,
           OASISContext,
           OASISSourcePatterns,
           OASISGettext,
           OASISMessage,
           OASISText,
           OASISTypes,
           OASISParse,
           OASISValues,
           OASISExpr,
           OASISVersion,
           OASISLicense,
           OASISFileTemplate,
           OASISBuildSection,
           OASISDocument,
           OASISExecutable,
           OASISFlag,
           OASISSetupUpdate,
           OASISLibrary,
           OASISObject,
           OASISPackage,
           OASISSourceRepository,
           OASISTest,
           OASISPlugin,
           OASISFindlib,
           OASISSchema,
           OASISSection,
           OASISData,
           OASISString,
           OASISExec,
           OASISFileUtil,
           OASISHostPath,
           OASISGraph,
           OASISFeatures,
           OASISDataNotation
  InternalModules: OASISMutex,
                   OASISVersion_types,
                   OASISVersion_lexer,
                   OASISVersion_parser,
                   OASISLicense_types,
                   OASISLicense_lexer,
                   OASISLicense_parser,
                   OASISValues_lexer,
                   OASISConf,
                   OASISAst_types,
                   OASISAst_lexer,
                   OASISAst_parser,
                   OASISAst,
                   OASISCheck,
                   OASISCustom,
                   OASISQuickstart,
                   OASISHelp,
                   OASISFormat,
                   OASISSection_intern,
                   OASISBuildSection_intern,
                   OASISDocument_intern,
                   OASISExecutable_intern,
                   OASISFlag_intern,
                   OASISLibrary_intern,
                   OASISObject_intern,
                   OASISPackage_intern,
                   OASISSourceRepository_intern,
                   OASISTest_intern,
                   OASISSchema_intern,
                   OASISPath_intern
  CompiledObject: Best
  BuildDepends: unix
  BuildTools+: ocamlmod, ocamlyacc, ocamllex, ocamlify
  XMETADescription: _oasis file functions
  Install$: flag(libraries)

Library base
  Path: src/base
  Modules: BaseArgExt,
           BaseBuilt,
           BaseCheck,
           BaseCustom,
           BaseData,
           BaseDoc,
           BaseEnvLight,
           BaseEnv,
           BaseFileAB,
           BaseGenerate,
           BaseLog,
           BaseOCamlcConfig,
           BaseSetup,
           BaseStandardVar,
           BaseTest,
           BaseDynVar,
           BaseMessage,
           BaseContext,
           BaseCompat
  CompiledObject: Best
  BuildDepends: oasis
  BuildTools+: ocamlmod, ocamlify
  FindlibParent: oasis
  XMETADescription: 'setup.ml' modules for OASIS
  Install$: flag(libraries)

Library "builtin-plugins"
  Path: src
  Modules: OASISBuiltinPlugins,
           plugins/extra/META/METAPlugin,
           plugins/internal/InternalConfigurePlugin,
           plugins/internal/InternalInstallPlugin,
           plugins/none/NonePlugin,
           plugins/ocamlbuild/OCamlbuildPlugin,
           plugins/ocamlbuild/OCamlbuildDocPlugin,
           plugins/ocamlbuild/OCamlbuildCommon,
           plugins/custom/CustomPlugin,
           plugins/extra/devfiles/DevFilesPlugin,
           plugins/extra/stdfiles/StdFilesPlugin,
           plugins/omake/OMakePlugin
  InternalModules: plugins/none/NoneData,
                   plugins/internal/InternalData,
                   plugins/internal/InternalId,
                   plugins/ocamlbuild/OCamlbuildData,
                   plugins/ocamlbuild/OCamlbuildId,
                   plugins/ocamlbuild/MyOCamlbuildBase,
                   plugins/ocamlbuild/MyOCamlbuildFindlib,
                   plugins/custom/CustomData,
                   plugins/extra/META/METAData,
                   plugins/extra/devfiles/DevFilesData,
                   plugins/extra/stdfiles/StdFilesData,
                   plugins/omake/OMakeData,
                   plugins/omake/OMakeFields,
                   plugins/omake/OMakeEquip,
                   plugins/omake/OMakeFormat
  CompiledObject: Best
  BuildDepends: oasis, oasis.base, ocamlbuild
  FindlibParent: oasis

Library cli
  Path:             src/cli
  Modules:          CLISubCommand,
                    CLIArgExt,
                    CLICommon,
                    CLIPager
  InternalModules:  CLIData, CLIPluginsLoaded, CLIPluginLoader
  CompiledObject:   byte
  BuildDepends:     oasis, oasis.base, plugin-loader
  FindlibParent:    oasis
  XMETADescription: 'setup.ml' modules for OASIS
  Install$:         flag(libraries)

Library dynrun
  Path:           src/dynrun
  Modules:        OASISDynRun
  CompiledObject: best
  BuildDepends:   oasis.base, oasis.builtin-plugins
  FindlibParent:  oasis

Executable oasis
  Path:   src/cli
  MainIs: Main.ml
  BuildDepends: oasis, oasis.base, oasis.cli, oasis.builtin-plugins
  CompiledObject: best

Document manual
  Type: custom (0.4)
  Title: OASIS User Manual
  XCustom: $oasis -ignore-plugins manual -o doc/MANUAL.mkd
  XCustomClean: $rm doc/MANUAL.mkd
  DataFiles: doc/MANUAL.mkd

Document "api-oasis"
  Title:                API reference for OASIS
  Type:                 OCamlbuild (0.4)
  InstallDir:           $htmldir/oasis
  BuildTools+:          ocamldoc
  XOCamlbuildPath:      src/
  XOCamlbuildLibraries: oasis, oasis.base, oasis.cli

SourceRepository head
  Type: git
  Location: git://github.com/ocaml/oasis.git
  Browser: https://github.com/ocaml/oasis

#
# Tests.
#

Library "test-common"
  Path: test/test-common
  Modules: TestCommon, TestFullUtils
  Install: false
  CompiledObject: best
  Build$: flag(tests)
  BuildDepends: oUnit (>= 2.0.0), oasis.base, fileutils, pcre

Executable "fake-ocamlfind"
  Path: test/fake-ocamlfind
  MainIs: FakeOCamlfind.ml
  Install: false
  CompiledObject: best
  Build$: flag(tests)
  BuildDepends: unix

Executable "test-main"
  Path: test/test-main
  MainIs: Test.ml
  Install: false
  CompiledObject: best
  Build$: flag(tests)
  BuildDepends: oUnit (>= 2.0.0), findlib, fileutils (>= 0.4.2), oasis,
                oasis.base, oasis.builtin-plugins, test-common

Test main
  Type: custom (0.4)
  Command: $test_main -oasis $oasis -is-native $is_native -native-dynlink $native_dynlink -ocamlmod $ocamlmod -fake-ocamlfind $fake_ocamlfind -ext-lib $ext_lib -ext-dll $ext_dll
  WorkingDirectory: test
  TestTools: oasis, test-main, ocamlmod, fake-ocamlfind, ocamlbuild

Executable "test-omake"
  Path: test/test-omake
  MainIs: TestOMake.ml
  Install: false
  CompiledObject: best
  Build$: flag(tests) && flag(omake_tests)
  BuildDepends: oUnit (>= 2.0.0), findlib, fileutils (>= 0.4.2), oasis,
                oasis.base, oasis.builtin-plugins, test-common

Test omake
  Type: custom (0.4)
  Command: $test_omake -oasis $oasis -is-native $is_native -native-dynlink $native_dynlink -ocamlmod $ocamlmod -fake-ocamlfind $fake_ocamlfind -ext-lib $ext_lib -ext-dll $ext_dll
  WorkingDirectory: test
  Run$: flag(omake_tests)
  TestTools: oasis, test-omake, ocamlmod, fake-ocamlfind, omake

Executable "test-quickstart"
  Path: test/test-quickstart
  MainIs: TestQuickstart.ml
  Install: false
  CompiledObject: best
  Build$: flag(tests) && flag(quickstart_tests)
  BuildDepends: oUnit (>= 2.0.0), findlib, fileutils (>= 0.4.2),
                expect.pcre (>= 0.0.4), oasis, oasis.builtin-plugins,
                test-common

Test quickstart
  Type: custom (0.4)
  Command: $test_quickstart -oasis $oasis -is-native $is_native -native-dynlink $native_dynlink -ocamlmod $ocamlmod -fake-ocamlfind $fake_ocamlfind
  WorkingDirectory: test
  Run$: flag(quickstart_tests)
  TestTools: oasis, test-quickstart


Executable "test-devel"
  Path: test/test-devel
  MainIs: TestDevel.ml
  Install: false
  CompiledObject: best
  Build$: flag(tests) && flag(devel_tests)
  BuildDepends: oUnit (>= 2.0.0), oasis, test-common

Test devel
  Type: custom (0.4)
  Command: $test_devel
  WorkingDirectory: test
  Run$: flag(devel_tests)
  TestTools: oasis, test-devel

#
# Tools.
#

Executable bench
  Path: src/tools/bench
  MainIs: Bench.ml
  Install: false
  CompiledObject: best
  Build$: flag(devel)
  BuildDepends: benchmark (>= 1.2), oasis, oasis.base, oasis.builtin-plugins

#
# Third party: plugin-loader.
#

Library "plugin-loader"
  Path: src/ext/plugin-loader/src
  Modules: PluginLoader
  BuildDepends: dynlink, findlib
  XMETADescription: OCaml plugin management using findlib

Library "pluginloaderLib"
  Path: src/ext/plugin-loader/test/data/findlib/pluginloaderLib
  Modules: PluginloaderLib
  Build$: flag(tests)
  Install: false
  XMETADescription: test library loader

Library "plugin1"
  Path: src/ext/plugin-loader/test/data/findlib/plugin1
  Modules: Plugin1
  Install: false
  Build$: flag(tests)
  BuildDepends: pluginloaderLib
  XMETADescription: test library number 1
  XMETAExtraLines: plugin_system = "pluginloader"
                   plugin_name = "plugin1"
                   plugin_synopsis = "first plugin"

Library "plugin2"
  Path: src/ext/plugin-loader/test/data/findlib/plugin2
  Modules: Plugin2
  Install: false
  Build$: flag(tests)
  BuildDepends: pluginloaderLib, plugin1
  XMETADescription: test library number 2
  XMETAExtraLines: plugin_system = "pluginloader"
                   plugin_name = "plugin2"
                   plugin_synopsis = "second plugin"

Library "plugin3"
  Path: src/ext/plugin-loader/test/data/findlib/plugin3
  Modules: Plugin3
  Install: false
  Build$: flag(tests)
  BuildDepends: pluginloaderLib
  XMETADescription: test library number 3
  XMETAExtraLines: plugin_system = "pluginloader"
                   plugin_name = "plugin3"
                   plugin_synopsis = "third plugin"

Executable "pluginloader"
  Path:    src/ext/plugin-loader/test/data
  MainIs:  PluginLoaderMain.ml
  Install: false
  Build$: flag(tests)
  BuildDepends: pluginloaderLib, plugin-loader

Executable "test_loader"
  Path: src/ext/plugin-loader/test
  MainIs: TestLoader.ml
  BuildDepends: plugin-loader, fileutils, oUnit
  Build$: flag(tests)
  Install: false

Test main_loader
  Type: custom (0.4)
  Command: $test_loader -pluginloader $pluginloader
  TestTools: test_loader, pluginloader
